/** * Created by Marszed on 2016/1/13. * description 自动化构建工具. * keyword * npm install gulp-sass gulp-autoprefixer gulp-minify-css gulp-jshint gulp-concat gulp-uglify gulp-imagemin gulp-notify gulp-rename gulp-livereload gulp-cache gulp-css-spriter --save-dev */var gulp = require('gulp'),	sass = require('gulp-sass'),	gulpif = require('gulp-if'),	autoprefixer = require('gulp-autoprefixer'),	minifycss = require('gulp-minify-css'),	jshint = require('gulp-jshint'),	uglify = require('gulp-uglify'),	imagemin = require('gulp-imagemin'),	pngquant = require('imagemin-pngquant'),	rename = require('gulp-rename'),	concat = require('gulp-concat'),	notify = require('gulp-notify'),	clean = require('gulp-clean'),	cmdPack = require('gulp-cmd-pack'),	combo = require('gulp-seajs-combo'),	cache = require('gulp-cache'),	browserSync = require('browser-sync').create(),	revCollector = require('gulp-rev-collector'),	minifyHtml = require('gulp-minify-html'),	spriter = require('gulp-css-spriter');var condition = true,	devConfig = 'static/dev/',	proConfig = 'static/pro/',	port = 4567,	liveUpdateMap = [		'./src/*',		'./static/**/**/*'	];//压缩Html/更新引入文件版本gulp.task('mini', function () {	return gulp.src(['src/rev/**/*.json', 'src/*.html'])		.pipe(revCollector())		.pipe(gulpif(			condition, minifyHtml({				empty: true,				spare: true,				quotes: true			})		))		.pipe(gulp.dest('../new/'));});// Stylesgulp.task('scss', function () {	return gulp.src(devConfig + 'scss/global/*.scss')		.pipe(sass())		.pipe(autoprefixer('last 2 version', 'safari 5', 'ie 8', 'ie 9', 'opera 12.1', 'ios 6', 'android 4'))		//.pipe(gulp.dest('stylesheets'))		.pipe(rename({suffix: '.min'}))		.pipe(minifycss())		.pipe(gulp.dest(proConfig + 'css/global/'))		.pipe(browserSync.stream())		.pipe(notify({message: 'scss task complete'}));});// Cssgulp.task('css', function () {	return gulp.src(devConfig + 'css/layer/*.css')		//.pipe(sass())		.pipe(autoprefixer('last 2 version', 'safari 5', 'ie 8', 'ie 9', 'opera 12.1', 'ios 6', 'android 4'))		//.pipe(gulp.dest('stylesheets'))		.pipe(rename({suffix: '.min'}))		.pipe(minifycss())		.pipe(gulp.dest(proConfig + 'css/layer/'))		.pipe(browserSync.stream())		.pipe(notify({message: 'css task complete'}));});// Scriptsgulp.task('js', function () {	return gulp.src(devConfig + 'scripts/common/*.js')		.pipe(jshint())		.pipe(jshint.reporter('default'))		//.pipe(concat('main.js'))//js包合并		//.pipe(rename({suffix: '.min'}))		.pipe(gulpif(			condition, uglify()		))		.pipe(gulp.dest(proConfig + 'scripts/common'))		//.pipe(rev.manifest())		.pipe(notify({message: 'js task complete'}));});//common Scriptsgulp.task('cmdJs', function () {	//gulp.src(['./Scripts/test.js', './Scripts/testTwo.js','./Scripts/main.js'])	//gulp.src(devConfig + 'scripts/common/*.js')	//	.pipe(concat('main.js'))	//	.pipe(uglify({	//		//mangle: true,//类型：Boolean 默认：true 是否修改变量名	//		mangle: { except: ['require', 'exports', 'module', '$'] }//排除混淆关键字	//	}))	//	.pipe(gulp.dest(proConfig + 'scripts/'));	//gulp.src(devConfig + 'scripts/main.js')	//    .pipe(cmdPack({	//        mainId: "Scripts/",	//        base: 'Scripts/'	//    }))	//.pipe(concat("all.js"))	//.pipe(combo())	//.pipe(gulp.dest('Scripts/dist/'));});// Imagesgulp.task('img', function () {	return gulp.src(devConfig + 'images/*')		.pipe(cache(imagemin({optimizationLevel: 3, progressive: true, interlaced: true, use: [pngquant()]})))		.pipe(gulp.dest(proConfig + 'images/'))		.pipe(notify({message: 'img task complete'}));});// Css-spritegulp.task('sprite', function () {	return gulp.src(devConfig + 'css/global/global.min.css')//需要自动合并雪碧图的样式文件		.pipe(spriter({			'spriteSheet': proConfig + 'img/sprite/sprites.png',//生成的spriter的位置			'pathToSpriteSheetFromCSS': '../../../pro/img/sprite/sprites.png'//生成样式文件图片引用地址的路径		}))		.pipe(minifycss())		.pipe(gulp.dest(proConfig + '/css/global/'))		.pipe(notify({message: 'sprite task complete'}));});// Cleangulp.task('clean', function () {	return gulp.src(['*.html', proConfig + '/css/*', proConfig + '/scripts/common/*', proConfig + '/images/*'], {		read: false	}).pipe(clean());});// Default taskgulp.task('default', function () {	gulp.start('clean', 'css', 'scss', 'js', 'img', 'mini');});//liveupdategulp.task('action', function() {	browserSync.init({		server: './',		port: port,		notify: false,//关闭浏览器debug框		ghostMode: {//点击，滚动和表单在任何设备上输入将被镜像到所有设备里			clicks: false,			forms: false,			scroll: false		},		online: true,//不会尝试确定网络状况，假设你在线		open: false	});	gulp.watch('src/*.html', ['mini']).on('change', browserSync.reload);	gulp.watch(devConfig+'scss/**/*.scss', ['scss']).on('change', browserSync.reload);	gulp.watch(devConfig+'css/**/*.css', ['css']).on('change', browserSync.reload);	gulp.watch(devConfig+'scripts/**/*.js').on('change', browserSync.reload);	gulp.watch(liveUpdateMap, function (file) {		console.log('===============文件改动列表===============');		console.log(file.path);		console.log('===============文件改动列表===============');		browserSync.reload();	});});